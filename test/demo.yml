- hosts: localhost
  connection: local
  gather_facts: false
  tasks:
      - name: create a security group in us-east-1 to allow SSH. Not safe for prod!
        amazon.aws.ec2_group:
          name: eci-example
          description: an example ec2 group
          region: us-east-1
          rules:
            - proto: tcp
              from_port: 22
              to_port: 22
              cidr_ip: 0.0.0.0/0
        register: security_group
      - name: create ec2 instance
        amazon.aws.ec2_instance:
          image_id: ami-0c02fb55956c7d316
          state: running
          wait: yes
          tags:
            test: test
          instance_type: t2.micro
          network:
            assign_public_ip: true
          security_group: "{{ security_group.group_id }}"
          region: us-east-1
        register: ec2
      - name: Add new instance to host group
        add_host:
          hostname: "{{ item.public_ip_address }}"
          groupname: launched_no_instance
          ansible_region: us-east-1 
        loop: "{{ ec2.instances }}"
      - name: Add new instance to host group (better with ansible_instance_id)
        add_host:
          hostname: "{{ item.public_ip_address }}"
          groupname: launched
          ansible_instance_id: "{{ item.instance_id }}"
          ansible_region: us-east-1 
        loop: "{{ ec2.instances }}" 
      - name: Wait for SSH to come up
        wait_for:
          host: "{{ item.public_dns_name }}"
          port: 22
          delay: 5
          timeout: 60
        loop: "{{ ec2.instances }}"
- hosts: launched
  connection: eci
  vars:
    aws_region: us-east-1 
    ansible_ssh_user: "root"
    ansible_host_key_checking: False
  gather_facts: false
  tasks: 
      - name: Connect to ec2 using eci with root@ip_address with instance-id
        ignore_errors: yes
        command: echo "Connected $USER using instance-id"
        register: message
      - debug: msg="{{ message.stdout }}"
        ignore_errors: yes
- hosts: launched_no_instance
  connection: eci
  vars:
    aws_region: us-east-1 
    ansible_ssh_user: "ec2-user"
  gather_facts: false
  tasks: 
      - name: Connect to ec2 using eci with root@ip-address only (slower)
        ignore_errors: yes
        command: echo "Connected $USER using ip address only"
        register: message
      - debug: msg="{{ message.stdout }}"
        ignore_errors: yes
- hosts: localhost
  connection: local
  gather_facts: false
  tasks: 
      - name: Terminate instances that were previously launched
        amazon.aws.ec2_instance:
          state: 'terminated'
          region: us-east-1
          instance_ids: '{{ ec2.instance_ids }}'